# Reusable workflow to run the following jobs:
#
#   - multiplatform-tests
#     - [ windows-2019 | windows-2022 ]
#     - [ Debug | Release ]
#     - execute tests in different versions of ubuntu with different build types
#
#   - asan
#     - ubuntu-22.04
#     - execute tests with ASAN flag
#
#   - tsan
#     - ubuntu-22.04
#     - execute tests with TSAN flag
#
#   - clang
#     - ubuntu-22.04
#     - execute clang-tidy check
#
#   - coverage
#     - ubuntu-22.04
#     - execute test with coverage flag and upload results
#
#   - flaky
#     - ubuntu-22.04
#     - execute flaky tests
#
#   - docs
#     - ubuntu-22.04
#     - execute docs compile and tests
#
#   - uncrustify
#     - ubuntu-22.04
#     - test uncrustify
#
#   - python-linter
#     - ubuntu-22.04
#     - test python linter
#

name: windows-ci

on:

  workflow_dispatch:
  workflow_call:
    inputs:

      custom_version_build:
        description: >
          Version of Fast DDS build from eProsima-CI.
        required: true
        type: string

      dependencies_artifact_postfix:
        description: >
          Postfix name to add to artifact name to download dependencies.
          This is use to download a specific artifact version from eProsima-CI.
        required: true
        default: '_nightly'
        type: string

      ref:
        description: >
          The branch or tag name to checkout.
        required: true
        type: string
        default: 'main'

env:
  # TODO: controller is not tested as it has no tests
  code_packages_names: 'ddsrecorder_participants ddsrecorder_yaml ddsrecorder_tool ddsreplayer_tool'
  docs_packages_names: 'ddsrecorder_docs'

jobs:

#####################################################################
# TEST

  multiplatform-tests:
    runs-on: ${{ matrix.os }}-ci
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2019
          - windows-2022
    uses: ./.github/workflows/reusable-workflow.yml
    with:
      os: ${{ matrix.os }}
      custom_version_build: ${{ inputs.custom_version_build || 'v3' }}
      dependencies_artifact_postfix: ${{ inputs.dependencies_artifact_postfix || '_nightly' }}
      ref: ${{ inputs.ref }}
    secrets: inherit
